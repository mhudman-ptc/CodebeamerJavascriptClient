/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import TrackerItemFieldMappingPair from './TrackerItemFieldMappingPair';
import TrackerItemReference from './TrackerItemReference';
import TrackerReference from './TrackerReference';

/**
 * The TrackerItemMoveRequest model module.
 * @module model/TrackerItemMoveRequest
 * @version 3.0
 */
export default class TrackerItemMoveRequest {
  /**
   * Constructs a new <code>TrackerItemMoveRequest</code>.
   * Request for Tracker Items move.
   * @alias module:model/TrackerItemMoveRequest
   * @class
   * @param fieldMapping {Array.<module:model/TrackerItemFieldMappingPair>} Field mappings between the Source Tacker and the Target Tracker.
   * @param sourceTracker {module:model/TrackerReference} 
   * @param targetTracker {module:model/TrackerReference} 
   */
  constructor(fieldMapping, sourceTracker, targetTracker) {
    this.fieldMapping = fieldMapping;
    this.sourceTracker = sourceTracker;
    this.targetTracker = targetTracker;
  }

  /**
   * Constructs a <code>TrackerItemMoveRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TrackerItemMoveRequest} obj Optional instance to populate.
   * @return {module:model/TrackerItemMoveRequest} The populated <code>TrackerItemMoveRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TrackerItemMoveRequest();
      if (data.hasOwnProperty('fieldMapping'))
        obj.fieldMapping = ApiClient.convertToType(data['fieldMapping'], [TrackerItemFieldMappingPair]);
      if (data.hasOwnProperty('items'))
        obj.items = ApiClient.convertToType(data['items'], [TrackerItemReference]);
      if (data.hasOwnProperty('sourceTracker'))
        obj.sourceTracker = TrackerReference.constructFromObject(data['sourceTracker']);
      if (data.hasOwnProperty('targetTracker'))
        obj.targetTracker = TrackerReference.constructFromObject(data['targetTracker']);
    }
    return obj;
  }
}

/**
 * Field mappings between the Source Tacker and the Target Tracker.
 * @member {Array.<module:model/TrackerItemFieldMappingPair>} fieldMapping
 */
TrackerItemMoveRequest.prototype.fieldMapping = undefined;

/**
 * Optional Tracker Item list. If not provided all Tracker Items from the Source Tracker are moved.
 * @member {Array.<module:model/TrackerItemReference>} items
 */
TrackerItemMoveRequest.prototype.items = undefined;

/**
 * @member {module:model/TrackerReference} sourceTracker
 */
TrackerItemMoveRequest.prototype.sourceTracker = undefined;

/**
 * @member {module:model/TrackerReference} targetTracker
 */
TrackerItemMoveRequest.prototype.targetTracker = undefined;

