/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import TrackerItem from './TrackerItem';
import TrackerItemReference from './TrackerItemReference';

/**
 * The CreateTestRunRequest model module.
 * @module model/CreateTestRunRequest
 * @version 3.0
 */
export default class CreateTestRunRequest {
  /**
   * Constructs a new <code>CreateTestRunRequest</code>.
   * Request model to create a test run from multiple test cases or 1 test set
   * @alias module:model/CreateTestRunRequest
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>CreateTestRunRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateTestRunRequest} obj Optional instance to populate.
   * @return {module:model/CreateTestRunRequest} The populated <code>CreateTestRunRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CreateTestRunRequest();
      if (data.hasOwnProperty('runOnlyAcceptedTestCases'))
        obj.runOnlyAcceptedTestCases = ApiClient.convertToType(data['runOnlyAcceptedTestCases'], 'Boolean');
      if (data.hasOwnProperty('testCaseIds'))
        obj.testCaseIds = ApiClient.convertToType(data['testCaseIds'], [TrackerItemReference]);
      if (data.hasOwnProperty('testCaseRefs'))
        obj.testCaseRefs = ApiClient.convertToType(data['testCaseRefs'], [TrackerItemReference]);
      if (data.hasOwnProperty('testRunModel'))
        obj.testRunModel = TrackerItem.constructFromObject(data['testRunModel']);
      if (data.hasOwnProperty('testSetIds'))
        obj.testSetIds = ApiClient.convertToType(data['testSetIds'], [TrackerItemReference]);
      if (data.hasOwnProperty('testSetRefs'))
        obj.testSetRefs = ApiClient.convertToType(data['testSetRefs'], [TrackerItemReference]);
    }
    return obj;
  }
}

/**
 * Generate Test Runs only from accepted Test Cases.
 * @member {Boolean} runOnlyAcceptedTestCases
 * @default false
 */
CreateTestRunRequest.prototype.runOnlyAcceptedTestCases = false;

/**
 * @member {Array.<module:model/TrackerItemReference>} testCaseIds
 */
CreateTestRunRequest.prototype.testCaseIds = undefined;

/**
 * Test case ids to include into the test run
 * @member {Array.<module:model/TrackerItemReference>} testCaseRefs
 */
CreateTestRunRequest.prototype.testCaseRefs = undefined;

/**
 * @member {module:model/TrackerItem} testRunModel
 */
CreateTestRunRequest.prototype.testRunModel = undefined;

/**
 * @member {Array.<module:model/TrackerItemReference>} testSetIds
 */
CreateTestRunRequest.prototype.testSetIds = undefined;

/**
 * Test set ids to include into the test run. Only the first test set will be considered.
 * @member {Array.<module:model/TrackerItemReference>} testSetRefs
 */
CreateTestRunRequest.prototype.testSetRefs = undefined;

