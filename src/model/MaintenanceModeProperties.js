/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The MaintenanceModeProperties model module.
 * @module model/MaintenanceModeProperties
 * @version 3.0
 */
export default class MaintenanceModeProperties {
  /**
   * Constructs a new <code>MaintenanceModeProperties</code>.
   * Extra properties for maintenance mode
   * @alias module:model/MaintenanceModeProperties
   * @class
   * @param loginErrorText {String} Error text shown during login
   * @param loginText {String} Text shown on login screen
   * @param notificationText {String} Notification text
   * @param slogan {String} Slogan text
   * @param welcomeText {String} Welcome text
   */
  constructor(loginErrorText, loginText, notificationText, slogan, welcomeText) {
    this.loginErrorText = loginErrorText;
    this.loginText = loginText;
    this.notificationText = notificationText;
    this.slogan = slogan;
    this.welcomeText = welcomeText;
  }

  /**
   * Constructs a <code>MaintenanceModeProperties</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MaintenanceModeProperties} obj Optional instance to populate.
   * @return {module:model/MaintenanceModeProperties} The populated <code>MaintenanceModeProperties</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MaintenanceModeProperties();
      if (data.hasOwnProperty('loginErrorText'))
        obj.loginErrorText = ApiClient.convertToType(data['loginErrorText'], 'String');
      if (data.hasOwnProperty('loginText'))
        obj.loginText = ApiClient.convertToType(data['loginText'], 'String');
      if (data.hasOwnProperty('notificationText'))
        obj.notificationText = ApiClient.convertToType(data['notificationText'], 'String');
      if (data.hasOwnProperty('slogan'))
        obj.slogan = ApiClient.convertToType(data['slogan'], 'String');
      if (data.hasOwnProperty('welcomeText'))
        obj.welcomeText = ApiClient.convertToType(data['welcomeText'], 'String');
    }
    return obj;
  }
}

/**
 * Error text shown during login
 * @member {String} loginErrorText
 */
MaintenanceModeProperties.prototype.loginErrorText = undefined;

/**
 * Text shown on login screen
 * @member {String} loginText
 */
MaintenanceModeProperties.prototype.loginText = undefined;

/**
 * Notification text
 * @member {String} notificationText
 */
MaintenanceModeProperties.prototype.notificationText = undefined;

/**
 * Slogan text
 * @member {String} slogan
 */
MaintenanceModeProperties.prototype.slogan = undefined;

/**
 * Welcome text
 * @member {String} welcomeText
 */
MaintenanceModeProperties.prototype.welcomeText = undefined;

