/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The ReportAggregate model module.
 * @module model/ReportAggregate
 * @version 3.0
 */
export default class ReportAggregate {
  /**
   * Constructs a new <code>ReportAggregate</code>.
   * Aggregated values for a column of a group.
   * @alias module:model/ReportAggregate
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ReportAggregate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ReportAggregate} obj Optional instance to populate.
   * @return {module:model/ReportAggregate} The populated <code>ReportAggregate</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ReportAggregate();
      if (data.hasOwnProperty('average'))
        obj.average = ApiClient.convertToType(data['average'], 'Number');
      if (data.hasOwnProperty('columnRef'))
        obj.columnRef = ApiClient.convertToType(data['columnRef'], 'String');
      if (data.hasOwnProperty('maximum'))
        obj.maximum = ApiClient.convertToType(data['maximum'], 'Number');
      if (data.hasOwnProperty('minimum'))
        obj.minimum = ApiClient.convertToType(data['minimum'], 'Number');
      if (data.hasOwnProperty('sum'))
        obj.sum = ApiClient.convertToType(data['sum'], 'Number');
    }
    return obj;
  }
}

/**
 * Average of the column values
 * @member {Number} average
 */
ReportAggregate.prototype.average = undefined;

/**
 * Column reference
 * @member {String} columnRef
 */
ReportAggregate.prototype.columnRef = undefined;

/**
 * Average of the column values
 * @member {Number} maximum
 */
ReportAggregate.prototype.maximum = undefined;

/**
 * Minimum of the column values
 * @member {Number} minimum
 */
ReportAggregate.prototype.minimum = undefined;

/**
 * Sum of the column values
 * @member {Number} sum
 */
ReportAggregate.prototype.sum = undefined;

