/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import BaseTrackerFieldChoiceOption from './BaseTrackerFieldChoiceOption';
import BaseTrackerFieldPermission from './BaseTrackerFieldPermission';
import TrackerFieldComputedFieldReference from './TrackerFieldComputedFieldReference';
import TrackerFieldDateFieldSettings from './TrackerFieldDateFieldSettings';
import TrackerFieldDependency from './TrackerFieldDependency';
import TrackerFieldServiceDeskField from './TrackerFieldServiceDeskField';

/**
 * The TrackerField model module.
 * @module model/TrackerField
 * @version 3.0
 */
export default class TrackerField {
  /**
   * Constructs a new <code>TrackerField</code>.
   * This model represents a whole Tracker Field configuration.
   * @alias module:model/TrackerField
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>TrackerField</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TrackerField} obj Optional instance to populate.
   * @return {module:model/TrackerField} The populated <code>TrackerField</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TrackerField();
      if (data.hasOwnProperty('aggregationRule'))
        obj.aggregationRule = ApiClient.convertToType(data['aggregationRule'], 'String');
      if (data.hasOwnProperty('choiceOptionSetting'))
        obj.choiceOptionSetting = BaseTrackerFieldChoiceOption.constructFromObject(data['choiceOptionSetting']);
      if (data.hasOwnProperty('computedAs'))
        obj.computedAs = ApiClient.convertToType(data['computedAs'], 'String');
      if (data.hasOwnProperty('computedFieldReferences'))
        obj.computedFieldReferences = ApiClient.convertToType(data['computedFieldReferences'], [TrackerFieldComputedFieldReference]);
      if (data.hasOwnProperty('dateFieldSettings'))
        obj.dateFieldSettings = TrackerFieldDateFieldSettings.constructFromObject(data['dateFieldSettings']);
      if (data.hasOwnProperty('defaultValuesInStatuses'))
        obj.defaultValuesInStatuses = ApiClient.convertToType(data['defaultValuesInStatuses'], {'String': 'String'});
      if (data.hasOwnProperty('dependency'))
        obj.dependency = TrackerFieldDependency.constructFromObject(data['dependency']);
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('digits'))
        obj.digits = ApiClient.convertToType(data['digits'], 'Number');
      if (data.hasOwnProperty('distributionRule'))
        obj.distributionRule = ApiClient.convertToType(data['distributionRule'], 'String');
      if (data.hasOwnProperty('globalTypeIds'))
        obj.globalTypeIds = ApiClient.convertToType(data['globalTypeIds'], ['Number']);
      if (data.hasOwnProperty('height'))
        obj.height = ApiClient.convertToType(data['height'], 'Number');
      if (data.hasOwnProperty('hidden'))
        obj.hidden = ApiClient.convertToType(data['hidden'], 'Boolean');
      if (data.hasOwnProperty('hideIfFormula'))
        obj.hideIfFormula = ApiClient.convertToType(data['hideIfFormula'], 'String');
      if (data.hasOwnProperty('hideIfFormulaSameAsFieldId'))
        obj.hideIfFormulaSameAsFieldId = ApiClient.convertToType(data['hideIfFormulaSameAsFieldId'], 'Number');
      if (data.hasOwnProperty('label'))
        obj.label = ApiClient.convertToType(data['label'], 'String');
      if (data.hasOwnProperty('listable'))
        obj.listable = ApiClient.convertToType(data['listable'], 'Boolean');
      if (data.hasOwnProperty('mandatory'))
        obj.mandatory = ApiClient.convertToType(data['mandatory'], 'Boolean');
      if (data.hasOwnProperty('mandatoryIfFormula'))
        obj.mandatoryIfFormula = ApiClient.convertToType(data['mandatoryIfFormula'], 'String');
      if (data.hasOwnProperty('mandatoryIfFormulaSameAsFieldId'))
        obj.mandatoryIfFormulaSameAsFieldId = ApiClient.convertToType(data['mandatoryIfFormulaSameAsFieldId'], 'Number');
      if (data.hasOwnProperty('maxValue'))
        obj.maxValue = ApiClient.convertToType(data['maxValue'], 'String');
      if (data.hasOwnProperty('minValue'))
        obj.minValue = ApiClient.convertToType(data['minValue'], 'String');
      if (data.hasOwnProperty('multipleSelection'))
        obj.multipleSelection = ApiClient.convertToType(data['multipleSelection'], 'Boolean');
      if (data.hasOwnProperty('newLine'))
        obj.newLine = ApiClient.convertToType(data['newLine'], 'Boolean');
      if (data.hasOwnProperty('omitMerge'))
        obj.omitMerge = ApiClient.convertToType(data['omitMerge'], 'Boolean');
      if (data.hasOwnProperty('omitSuspectedWhenChange'))
        obj.omitSuspectedWhenChange = ApiClient.convertToType(data['omitSuspectedWhenChange'], 'Boolean');
      if (data.hasOwnProperty('permission'))
        obj.permission = BaseTrackerFieldPermission.constructFromObject(data['permission']);
      if (data.hasOwnProperty('position'))
        obj.position = ApiClient.convertToType(data['position'], 'Number');
      if (data.hasOwnProperty('propagateDependencies'))
        obj.propagateDependencies = ApiClient.convertToType(data['propagateDependencies'], 'Boolean');
      if (data.hasOwnProperty('propagateSuspect'))
        obj.propagateSuspect = ApiClient.convertToType(data['propagateSuspect'], 'Boolean');
      if (data.hasOwnProperty('referenceId'))
        obj.referenceId = ApiClient.convertToType(data['referenceId'], 'Number');
      if (data.hasOwnProperty('reversedSuspect'))
        obj.reversedSuspect = ApiClient.convertToType(data['reversedSuspect'], 'Boolean');
      if (data.hasOwnProperty('serviceDeskField'))
        obj.serviceDeskField = TrackerFieldServiceDeskField.constructFromObject(data['serviceDeskField']);
      if (data.hasOwnProperty('span'))
        obj.span = ApiClient.convertToType(data['span'], 'Number');
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('typeId'))
        obj.typeId = ApiClient.convertToType(data['typeId'], 'Number');
      if (data.hasOwnProperty('union'))
        obj.union = ApiClient.convertToType(data['union'], 'Boolean');
      if (data.hasOwnProperty('width'))
        obj.width = ApiClient.convertToType(data['width'], 'Number');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>aggregationRule</code> property.
 * @enum {String}
 * @readonly
 */
TrackerField.AggregationRuleEnum = {
  /**
   * value: "MINIMUM"
   * @const
   */
  MINIMUM: "MINIMUM",

  /**
   * value: "MAXIMUM"
   * @const
   */
  MAXIMUM: "MAXIMUM",

  /**
   * value: "UNION"
   * @const
   */
  UNION: "UNION",

  /**
   * value: "INTERSECTION"
   * @const
   */
  INTERSECTION: "INTERSECTION",

  /**
   * value: "SUM_TOTAL"
   * @const
   */
  SUM_TOTAL: "SUM_TOTAL",

  /**
   * value: "AVERAGE"
   * @const
   */
  AVERAGE: "AVERAGE"
};
/**
 * The Aggregation Rule for a specific Field.
 * @member {module:model/TrackerField.AggregationRuleEnum} aggregationRule
 */
TrackerField.prototype.aggregationRule = undefined;

/**
 * @member {module:model/BaseTrackerFieldChoiceOption} choiceOptionSetting
 */
TrackerField.prototype.choiceOptionSetting = undefined;

/**
 * @member {String} computedAs
 */
TrackerField.prototype.computedAs = undefined;

/**
 * @member {Array.<module:model/TrackerFieldComputedFieldReference>} computedFieldReferences
 */
TrackerField.prototype.computedFieldReferences = undefined;

/**
 * @member {module:model/TrackerFieldDateFieldSettings} dateFieldSettings
 */
TrackerField.prototype.dateFieldSettings = undefined;

/**
 * @member {Object.<String, String>} defaultValuesInStatuses
 */
TrackerField.prototype.defaultValuesInStatuses = undefined;

/**
 * @member {module:model/TrackerFieldDependency} dependency
 */
TrackerField.prototype.dependency = undefined;

/**
 * @member {String} description
 */
TrackerField.prototype.description = undefined;

/**
 * @member {Number} digits
 */
TrackerField.prototype.digits = undefined;

/**
 * Allowed values for the <code>distributionRule</code> property.
 * @enum {String}
 * @readonly
 */
TrackerField.DistributionRuleEnum = {
  /**
   * value: "SET"
   * @const
   */
  SET: "SET",

  /**
   * value: "DEFAULT"
   * @const
   */
  DEFAULT: "DEFAULT",

  /**
   * value: "LEAST"
   * @const
   */
  LEAST: "LEAST",

  /**
   * value: "GREATEST"
   * @const
   */
  GREATEST: "GREATEST",

  /**
   * value: "SUBSET"
   * @const
   */
  SUBSET: "SUBSET",

  /**
   * value: "SUPERSET"
   * @const
   */
  SUPERSET: "SUPERSET",

  /**
   * value: "CLOSE_RECURSIVELY"
   * @const
   */
  CLOSE_RECURSIVELY: "CLOSE_RECURSIVELY",

  /**
   * value: "CLOSE_RESTRICTED"
   * @const
   */
  CLOSE_RESTRICTED: "CLOSE_RESTRICTED"
};
/**
 * The Distribution Rule of a specific Field.
 * @member {module:model/TrackerField.DistributionRuleEnum} distributionRule
 */
TrackerField.prototype.distributionRule = undefined;

/**
 * @member {Array.<Number>} globalTypeIds
 */
TrackerField.prototype.globalTypeIds = undefined;

/**
 * @member {Number} height
 */
TrackerField.prototype.height = undefined;

/**
 * @member {Boolean} hidden
 */
TrackerField.prototype.hidden = undefined;

/**
 * @member {String} hideIfFormula
 */
TrackerField.prototype.hideIfFormula = undefined;

/**
 * @member {Number} hideIfFormulaSameAsFieldId
 */
TrackerField.prototype.hideIfFormulaSameAsFieldId = undefined;

/**
 * @member {String} label
 */
TrackerField.prototype.label = undefined;

/**
 * @member {Boolean} listable
 */
TrackerField.prototype.listable = undefined;

/**
 * @member {Boolean} mandatory
 */
TrackerField.prototype.mandatory = undefined;

/**
 * @member {String} mandatoryIfFormula
 */
TrackerField.prototype.mandatoryIfFormula = undefined;

/**
 * @member {Number} mandatoryIfFormulaSameAsFieldId
 */
TrackerField.prototype.mandatoryIfFormulaSameAsFieldId = undefined;

/**
 * @member {String} maxValue
 */
TrackerField.prototype.maxValue = undefined;

/**
 * @member {String} minValue
 */
TrackerField.prototype.minValue = undefined;

/**
 * @member {Boolean} multipleSelection
 */
TrackerField.prototype.multipleSelection = undefined;

/**
 * @member {Boolean} newLine
 */
TrackerField.prototype.newLine = undefined;

/**
 * @member {Boolean} omitMerge
 */
TrackerField.prototype.omitMerge = undefined;

/**
 * @member {Boolean} omitSuspectedWhenChange
 */
TrackerField.prototype.omitSuspectedWhenChange = undefined;

/**
 * @member {module:model/BaseTrackerFieldPermission} permission
 */
TrackerField.prototype.permission = undefined;

/**
 * @member {Number} position
 */
TrackerField.prototype.position = undefined;

/**
 * @member {Boolean} propagateDependencies
 */
TrackerField.prototype.propagateDependencies = undefined;

/**
 * @member {Boolean} propagateSuspect
 */
TrackerField.prototype.propagateSuspect = undefined;

/**
 * @member {Number} referenceId
 */
TrackerField.prototype.referenceId = undefined;

/**
 * @member {Boolean} reversedSuspect
 */
TrackerField.prototype.reversedSuspect = undefined;

/**
 * @member {module:model/TrackerFieldServiceDeskField} serviceDeskField
 */
TrackerField.prototype.serviceDeskField = undefined;

/**
 * @member {Number} span
 */
TrackerField.prototype.span = undefined;

/**
 * @member {String} title
 */
TrackerField.prototype.title = undefined;

/**
 * @member {Number} typeId
 */
TrackerField.prototype.typeId = undefined;

/**
 * @member {Boolean} union
 */
TrackerField.prototype.union = undefined;

/**
 * @member {Number} width
 */
TrackerField.prototype.width = undefined;

