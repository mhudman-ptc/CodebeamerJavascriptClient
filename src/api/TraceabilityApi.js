/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from "../ApiClient";
import ResourceForbiddenException from '../model/ResourceForbiddenException';
import ResourceNotFoundException from '../model/ResourceNotFoundException';
import TooManyRequestsException from '../model/TooManyRequestsException';
import TraceabilityInitialLevelFilter from '../model/TraceabilityInitialLevelFilter';
import TraceabilityItem from '../model/TraceabilityItem';
import TraceabilityLevelFilter from '../model/TraceabilityLevelFilter';
import TraceabilityResult from '../model/TraceabilityResult';

/**
* Traceability service.
* @module api/TraceabilityApi
* @version 3.0
*/
export default class TraceabilityApi {

    /**
    * Constructs a new TraceabilityApi. 
    * @alias module:api/TraceabilityApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getTraceabilityInitialItemIds operation.
     * @callback moduleapi/TraceabilityApi~getTraceabilityInitialItemIdsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TraceabilityItem>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get initial ids
     * Get traceability initial ids!
     * @param {module:model/TraceabilityInitialLevelFilter} body 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize Number of items in a result page.
     * @param {Number} opts.pageNo Index of the result page.
     * @param {module:api/TraceabilityApi~getTraceabilityInitialItemIdsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getTraceabilityInitialItemIds(body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling getTraceabilityInitialItemIds");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'pageSize': opts['pageSize'],'pageNo': opts['pageNo']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['ApiKeyAuth', 'BasicAuth', 'BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [TraceabilityItem];

      return this.apiClient.callApi(
        '/v3/traceability/items', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getTraceabilityLevelItemIds operation.
     * @callback moduleapi/TraceabilityApi~getTraceabilityLevelItemIdsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TraceabilityResult{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get traceability level item ids
     * Get traceability item ids!
     * @param {module:model/TraceabilityLevelFilter} body 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.itemsOnLevel Number of items per level.
     * @param {Number} opts.itemsFromPreviousItem Number of items per item.
     * @param {module:api/TraceabilityApi~getTraceabilityLevelItemIdsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getTraceabilityLevelItemIds(body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling getTraceabilityLevelItemIds");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'itemsOnLevel': opts['itemsOnLevel'],'itemsFromPreviousItem': opts['itemsFromPreviousItem']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['ApiKeyAuth', 'BasicAuth', 'BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TraceabilityResult;

      return this.apiClient.callApi(
        '/v3/traceability/relations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}