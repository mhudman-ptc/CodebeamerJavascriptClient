/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CodebeamerSwaggerApi);
  }
}(this, function(expect, CodebeamerSwaggerApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ReportReferenceLevel', function() {
      beforeEach(function() {
        instance = new CodebeamerSwaggerApi.ReportReferenceLevel();
      });

      it('should create an instance of ReportReferenceLevel', function() {
        // TODO: update the code to test ReportReferenceLevel
        expect(instance).to.be.a(CodebeamerSwaggerApi.ReportReferenceLevel);
      });

      it('should have the property columns (base name: "columns")', function() {
        // TODO: update the code to test the property columns
        expect(instance).to.have.property('columns');
        // expect(instance.columns).to.be(expectedValueLiteral);
      });

      it('should have the property downstreamReferenceRows (base name: "downstreamReferenceRows")', function() {
        // TODO: update the code to test the property downstreamReferenceRows
        expect(instance).to.have.property('downstreamReferenceRows');
        // expect(instance.downstreamReferenceRows).to.be(expectedValueLiteral);
      });

      it('should have the property referenceLevel (base name: "referenceLevel")', function() {
        // TODO: update the code to test the property referenceLevel
        expect(instance).to.have.property('referenceLevel');
        // expect(instance.referenceLevel).to.be(expectedValueLiteral);
      });

      it('should have the property upstreamReferenceRows (base name: "upstreamReferenceRows")', function() {
        // TODO: update the code to test the property upstreamReferenceRows
        expect(instance).to.have.property('upstreamReferenceRows');
        // expect(instance.upstreamReferenceRows).to.be(expectedValueLiteral);
      });

    });
  });

}));
