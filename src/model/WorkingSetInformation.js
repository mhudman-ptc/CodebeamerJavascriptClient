/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import ProjectReference from './ProjectReference';
import UserReference from './UserReference';
import WorkingSetReference from './WorkingSetReference';

/**
 * The WorkingSetInformation model module.
 * @module model/WorkingSetInformation
 * @version 3.0
 */
export default class WorkingSetInformation {
  /**
   * Constructs a new <code>WorkingSetInformation</code>.
   * Information of a Working-Set
   * @alias module:model/WorkingSetInformation
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>WorkingSetInformation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/WorkingSetInformation} obj Optional instance to populate.
   * @return {module:model/WorkingSetInformation} The populated <code>WorkingSetInformation</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new WorkingSetInformation();
      if (data.hasOwnProperty('children'))
        obj.children = ApiClient.convertToType(data['children'], [WorkingSetReference]);
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'Date');
      if (data.hasOwnProperty('createdBy'))
        obj.createdBy = UserReference.constructFromObject(data['createdBy']);
      if (data.hasOwnProperty('deleted'))
        obj.deleted = ApiClient.convertToType(data['deleted'], 'Boolean');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('parent'))
        obj.parent = WorkingSetReference.constructFromObject(data['parent']);
      if (data.hasOwnProperty('project'))
        obj.project = ProjectReference.constructFromObject(data['project']);
      if (data.hasOwnProperty('root'))
        obj.root = WorkingSetReference.constructFromObject(data['root']);
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
    }
    return obj;
  }
}

/**
 * The children of the given Working-Set
 * @member {Array.<module:model/WorkingSetReference>} children
 */
WorkingSetInformation.prototype.children = undefined;

/**
 * The date when the entity was created
 * @member {Date} createdAt
 */
WorkingSetInformation.prototype.createdAt = undefined;

/**
 * @member {module:model/UserReference} createdBy
 */
WorkingSetInformation.prototype.createdBy = undefined;

/**
 * Is the Working-Set deleted or not
 * @member {Boolean} deleted
 */
WorkingSetInformation.prototype.deleted = undefined;

/**
 * Id of the entity
 * @member {Number} id
 */
WorkingSetInformation.prototype.id = undefined;

/**
 * Name of the entity
 * @member {String} name
 */
WorkingSetInformation.prototype.name = undefined;

/**
 * @member {module:model/WorkingSetReference} parent
 */
WorkingSetInformation.prototype.parent = undefined;

/**
 * @member {module:model/ProjectReference} project
 */
WorkingSetInformation.prototype.project = undefined;

/**
 * @member {module:model/WorkingSetReference} root
 */
WorkingSetInformation.prototype.root = undefined;

/**
 * Type of a referenced object
 * @member {String} type
 */
WorkingSetInformation.prototype.type = undefined;

