/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import TrackerItemRevision from './TrackerItemRevision';

/**
 * The AbstractTrackerItemReference model module.
 * @module model/AbstractTrackerItemReference
 * @version 3.0
 */
export default class AbstractTrackerItemReference {
  /**
   * Constructs a new <code>AbstractTrackerItemReference</code>.
   * Reference to an item
   * @alias module:model/AbstractTrackerItemReference
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>AbstractTrackerItemReference</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AbstractTrackerItemReference} obj Optional instance to populate.
   * @return {module:model/AbstractTrackerItemReference} The populated <code>AbstractTrackerItemReference</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AbstractTrackerItemReference();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('itemRevision'))
        obj.itemRevision = TrackerItemRevision.constructFromObject(data['itemRevision']);
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
    }
    return obj;
  }
}

/**
 * Id of the reference/association
 * @member {Number} id
 */
AbstractTrackerItemReference.prototype.id = undefined;

/**
 * @member {module:model/TrackerItemRevision} itemRevision
 */
AbstractTrackerItemReference.prototype.itemRevision = undefined;

/**
 * Type of the relation
 * @member {String} type
 */
AbstractTrackerItemReference.prototype.type = undefined;

