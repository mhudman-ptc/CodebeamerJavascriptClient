/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The WikiRenderRequest model module.
 * @module model/WikiRenderRequest
 * @version 3.0
 */
export default class WikiRenderRequest {
  /**
   * Constructs a new <code>WikiRenderRequest</code>.
   * Request model to render a wiki page in a specific context
   * @alias module:model/WikiRenderRequest
   * @class
   * @param markup {String} Wiki markup to render as HTML
   */
  constructor(markup) {
    this.markup = markup;
  }

  /**
   * Constructs a <code>WikiRenderRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/WikiRenderRequest} obj Optional instance to populate.
   * @return {module:model/WikiRenderRequest} The populated <code>WikiRenderRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new WikiRenderRequest();
      if (data.hasOwnProperty('contextId'))
        obj.contextId = ApiClient.convertToType(data['contextId'], 'Number');
      if (data.hasOwnProperty('contextVersion'))
        obj.contextVersion = ApiClient.convertToType(data['contextVersion'], 'Number');
      if (data.hasOwnProperty('markup'))
        obj.markup = ApiClient.convertToType(data['markup'], 'String');
      if (data.hasOwnProperty('renderingContextType'))
        obj.renderingContextType = ApiClient.convertToType(data['renderingContextType'], 'String');
    }
    return obj;
  }
}

/**
 * Id of the entity used as rendering context
 * @member {Number} contextId
 */
WikiRenderRequest.prototype.contextId = undefined;

/**
 * Version of the entity used as rendering context
 * @member {Number} contextVersion
 */
WikiRenderRequest.prototype.contextVersion = undefined;

/**
 * Wiki markup to render as HTML
 * @member {String} markup
 */
WikiRenderRequest.prototype.markup = undefined;

/**
 * Allowed values for the <code>renderingContextType</code> property.
 * @enum {String}
 * @readonly
 */
WikiRenderRequest.RenderingContextTypeEnum = {
  /**
   * value: "TRACKER_ITEM"
   * @const
   */
  TRACKER_ITEM: "TRACKER_ITEM",

  /**
   * value: "WIKI"
   * @const
   */
  WIKI: "WIKI"
};
/**
 * Type of the entity used as rendering context
 * @member {module:model/WikiRenderRequest.RenderingContextTypeEnum} renderingContextType
 */
WikiRenderRequest.prototype.renderingContextType = undefined;

