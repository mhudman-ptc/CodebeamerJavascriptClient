/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The AuditPermissionsRequest model module.
 * @module model/AuditPermissionsRequest
 * @version 3.0
 */
export default class AuditPermissionsRequest {
  /**
   * Constructs a new <code>AuditPermissionsRequest</code>.
   * Request model for audit permissions
   * @alias module:model/AuditPermissionsRequest
   * @class
   * @param eventTypes {Array.<String>} Event type names
   */
  constructor(eventTypes) {
    this.eventTypes = eventTypes;
  }

  /**
   * Constructs a <code>AuditPermissionsRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AuditPermissionsRequest} obj Optional instance to populate.
   * @return {module:model/AuditPermissionsRequest} The populated <code>AuditPermissionsRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AuditPermissionsRequest();
      if (data.hasOwnProperty('duration'))
        obj.duration = ApiClient.convertToType(data['duration'], 'String');
      if (data.hasOwnProperty('eventTypes'))
        obj.eventTypes = ApiClient.convertToType(data['eventTypes'], ['String']);
      if (data.hasOwnProperty('fromDate'))
        obj.fromDate = ApiClient.convertToType(data['fromDate'], 'Date');
      if (data.hasOwnProperty('projectIds'))
        obj.projectIds = ApiClient.convertToType(data['projectIds'], ['Number']);
      if (data.hasOwnProperty('showChanges'))
        obj.showChanges = ApiClient.convertToType(data['showChanges'], 'Boolean');
      if (data.hasOwnProperty('targetUserNames'))
        obj.targetUserNames = ApiClient.convertToType(data['targetUserNames'], ['String']);
      if (data.hasOwnProperty('toDate'))
        obj.toDate = ApiClient.convertToType(data['toDate'], 'Date');
      if (data.hasOwnProperty('trackerIds'))
        obj.trackerIds = ApiClient.convertToType(data['trackerIds'], ['Number']);
      if (data.hasOwnProperty('userNames'))
        obj.userNames = ApiClient.convertToType(data['userNames'], ['String']);
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>duration</code> property.
 * @enum {String}
 * @readonly
 */
AuditPermissionsRequest.DurationEnum = {
  /**
   * value: "TODAY"
   * @const
   */
  TODAY: "TODAY",

  /**
   * value: "THIS_WEEK"
   * @const
   */
  THIS_WEEK: "THIS_WEEK",

  /**
   * value: "THIS_MONTH"
   * @const
   */
  THIS_MONTH: "THIS_MONTH",

  /**
   * value: "THIS_QUARTER"
   * @const
   */
  THIS_QUARTER: "THIS_QUARTER",

  /**
   * value: "THIS_YEAR"
   * @const
   */
  THIS_YEAR: "THIS_YEAR",

  /**
   * value: "YESTERDAY"
   * @const
   */
  YESTERDAY: "YESTERDAY",

  /**
   * value: "LAST_2_DAYS"
   * @const
   */
  lAST2DAYS: "LAST_2_DAYS",

  /**
   * value: "LAST_5_DAYS"
   * @const
   */
  lAST5DAYS: "LAST_5_DAYS",

  /**
   * value: "LAST_7_DAYS"
   * @const
   */
  lAST7DAYS: "LAST_7_DAYS",

  /**
   * value: "LAST_10_DAYS"
   * @const
   */
  lAST10DAYS: "LAST_10_DAYS",

  /**
   * value: "LAST_30_DAYS"
   * @const
   */
  lAST30DAYS: "LAST_30_DAYS",

  /**
   * value: "LAST_365_DAYS"
   * @const
   */
  lAST365DAYS: "LAST_365_DAYS"
};
/**
 * duration
 * @member {module:model/AuditPermissionsRequest.DurationEnum} duration
 */
AuditPermissionsRequest.prototype.duration = undefined;

/**
 * Event type names
 * @member {Array.<String>} eventTypes
 */
AuditPermissionsRequest.prototype.eventTypes = undefined;

/**
 * From date
 * @member {Date} fromDate
 */
AuditPermissionsRequest.prototype.fromDate = undefined;

/**
 * Project ids
 * @member {Array.<Number>} projectIds
 */
AuditPermissionsRequest.prototype.projectIds = undefined;

/**
 * Show changes
 * @member {Boolean} showChanges
 * @default false
 */
AuditPermissionsRequest.prototype.showChanges = false;

/**
 * Target user names
 * @member {Array.<String>} targetUserNames
 */
AuditPermissionsRequest.prototype.targetUserNames = undefined;

/**
 * To date
 * @member {Date} toDate
 */
AuditPermissionsRequest.prototype.toDate = undefined;

/**
 * Tracker ids
 * @member {Array.<Number>} trackerIds
 */
AuditPermissionsRequest.prototype.trackerIds = undefined;

/**
 * User names
 * @member {Array.<String>} userNames
 */
AuditPermissionsRequest.prototype.userNames = undefined;

