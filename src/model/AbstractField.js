/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import ChoiceOptionReference from './ChoiceOptionReference';
import SharedFieldReference from './SharedFieldReference';

/**
 * The AbstractField model module.
 * @module model/AbstractField
 * @version 3.0
 */
export default class AbstractField {
  /**
   * Constructs a new <code>AbstractField</code>.
   * Abstract field
   * @alias module:model/AbstractField
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>AbstractField</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AbstractField} obj Optional instance to populate.
   * @return {module:model/AbstractField} The populated <code>AbstractField</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AbstractField();
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('formula'))
        obj.formula = ApiClient.convertToType(data['formula'], 'String');
      if (data.hasOwnProperty('hidden'))
        obj.hidden = ApiClient.convertToType(data['hidden'], 'Boolean');
      if (data.hasOwnProperty('hideIfDependencyFormula'))
        obj.hideIfDependencyFormula = ApiClient.convertToType(data['hideIfDependencyFormula'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('legacyRestName'))
        obj.legacyRestName = ApiClient.convertToType(data['legacyRestName'], 'String');
      if (data.hasOwnProperty('mandatoryIfDependencyFormula'))
        obj.mandatoryIfDependencyFormula = ApiClient.convertToType(data['mandatoryIfDependencyFormula'], 'String');
      if (data.hasOwnProperty('mandatoryInStatuses'))
        obj.mandatoryInStatuses = ApiClient.convertToType(data['mandatoryInStatuses'], [ChoiceOptionReference]);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('sharedFields'))
        obj.sharedFields = ApiClient.convertToType(data['sharedFields'], [SharedFieldReference]);
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('trackerItemField'))
        obj.trackerItemField = ApiClient.convertToType(data['trackerItemField'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('valueModel'))
        obj.valueModel = ApiClient.convertToType(data['valueModel'], 'String');
    }
    return obj;
  }
}

/**
 * Description of a field
 * @member {String} description
 */
AbstractField.prototype.description = undefined;

/**
 * Formula value of a field
 * @member {String} formula
 */
AbstractField.prototype.formula = undefined;

/**
 * Visibility status of a field
 * @member {Boolean} hidden
 */
AbstractField.prototype.hidden = undefined;

/**
 * Hide If dependency formula value of a field
 * @member {String} hideIfDependencyFormula
 */
AbstractField.prototype.hideIfDependencyFormula = undefined;

/**
 * Id of a field
 * @member {Number} id
 */
AbstractField.prototype.id = undefined;

/**
 * Identifier matching the legacy REST API naming
 * @member {String} legacyRestName
 */
AbstractField.prototype.legacyRestName = undefined;

/**
 * Mandatory If dependency formula value of a field
 * @member {String} mandatoryIfDependencyFormula
 */
AbstractField.prototype.mandatoryIfDependencyFormula = undefined;

/**
 * List of statuses where the field is mandatory.
 * @member {Array.<module:model/ChoiceOptionReference>} mandatoryInStatuses
 */
AbstractField.prototype.mandatoryInStatuses = undefined;

/**
 * Name of a field
 * @member {String} name
 */
AbstractField.prototype.name = undefined;

/**
 * List of shared fields assigned to this field
 * @member {Array.<module:model/SharedFieldReference>} sharedFields
 */
AbstractField.prototype.sharedFields = undefined;

/**
 * Title of a field
 * @member {String} title
 */
AbstractField.prototype.title = undefined;

/**
 * Tracker item's field name for this field
 * @member {String} trackerItemField
 */
AbstractField.prototype.trackerItemField = undefined;

/**
 * Type of a field
 * @member {String} type
 */
AbstractField.prototype.type = undefined;

/**
 * Name of the updater/getter value model
 * @member {String} valueModel
 */
AbstractField.prototype.valueModel = undefined;

