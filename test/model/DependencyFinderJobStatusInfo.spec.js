/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CodebeamerSwaggerApi);
  }
}(this, function(expect, CodebeamerSwaggerApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DependencyFinderJobStatusInfo', function() {
      beforeEach(function() {
        instance = new CodebeamerSwaggerApi.DependencyFinderJobStatusInfo();
      });

      it('should create an instance of DependencyFinderJobStatusInfo', function() {
        // TODO: update the code to test DependencyFinderJobStatusInfo
        expect(instance).to.be.a(CodebeamerSwaggerApi.DependencyFinderJobStatusInfo);
      });

      it('should have the property closedProjectWarnings (base name: "closedProjectWarnings")', function() {
        // TODO: update the code to test the property closedProjectWarnings
        expect(instance).to.have.property('closedProjectWarnings');
        // expect(instance.closedProjectWarnings).to.be(expectedValueLiteral);
      });

      it('should have the property dependencies (base name: "dependencies")', function() {
        // TODO: update the code to test the property dependencies
        expect(instance).to.have.property('dependencies');
        // expect(instance.dependencies).to.be(expectedValueLiteral);
      });

      it('should have the property missingPermissionWarnings (base name: "missingPermissionWarnings")', function() {
        // TODO: update the code to test the property missingPermissionWarnings
        expect(instance).to.have.property('missingPermissionWarnings');
        // expect(instance.missingPermissionWarnings).to.be(expectedValueLiteral);
      });

      it('should have the property projectsChecked (base name: "projectsChecked")', function() {
        // TODO: update the code to test the property projectsChecked
        expect(instance).to.have.property('projectsChecked');
        // expect(instance.projectsChecked).to.be(expectedValueLiteral);
      });

      it('should have the property projectsScheduled (base name: "projectsScheduled")', function() {
        // TODO: update the code to test the property projectsScheduled
        expect(instance).to.have.property('projectsScheduled');
        // expect(instance.projectsScheduled).to.be(expectedValueLiteral);
      });

    });
  });

}));
