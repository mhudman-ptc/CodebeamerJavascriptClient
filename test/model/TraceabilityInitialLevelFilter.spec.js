/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CodebeamerSwaggerApi);
  }
}(this, function(expect, CodebeamerSwaggerApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('TraceabilityInitialLevelFilter', function() {
      beforeEach(function() {
        instance = new CodebeamerSwaggerApi.TraceabilityInitialLevelFilter();
      });

      it('should create an instance of TraceabilityInitialLevelFilter', function() {
        // TODO: update the code to test TraceabilityInitialLevelFilter
        expect(instance).to.be.a(CodebeamerSwaggerApi.TraceabilityInitialLevelFilter);
      });

      it('should have the property cbQL (base name: "cbQL")', function() {
        // TODO: update the code to test the property cbQL
        expect(instance).to.have.property('cbQL');
        // expect(instance.cbQL).to.be(expectedValueLiteral);
      });

      it('should have the property historyBaselineId (base name: "historyBaselineId")', function() {
        // TODO: update the code to test the property historyBaselineId
        expect(instance).to.have.property('historyBaselineId');
        // expect(instance.historyBaselineId).to.be(expectedValueLiteral);
      });

      it('should have the property historyDate (base name: "historyDate")', function() {
        // TODO: update the code to test the property historyDate
        expect(instance).to.have.property('historyDate');
        // expect(instance.historyDate).to.be(expectedValueLiteral);
      });

      it('should have the property showAncestorItems (base name: "showAncestorItems")', function() {
        // TODO: update the code to test the property showAncestorItems
        expect(instance).to.have.property('showAncestorItems');
        // expect(instance.showAncestorItems).to.be(expectedValueLiteral);
      });

      it('should have the property showDescendantItems (base name: "showDescendantItems")', function() {
        // TODO: update the code to test the property showDescendantItems
        expect(instance).to.have.property('showDescendantItems');
        // expect(instance.showDescendantItems).to.be(expectedValueLiteral);
      });

    });
  });

}));
