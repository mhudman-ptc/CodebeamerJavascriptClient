/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import TrackerItemRevision from './TrackerItemRevision';

/**
 * The TraceabilityLevelFilter model module.
 * @module model/TraceabilityLevelFilter
 * @version 3.0
 */
export default class TraceabilityLevelFilter {
  /**
   * Constructs a new <code>TraceabilityLevelFilter</code>.
   * Traceability level filter
   * @alias module:model/TraceabilityLevelFilter
   * @class
   * @param cbQL {String} cbQL
   */
  constructor(cbQL) {
    this.cbQL = cbQL;
  }

  /**
   * Constructs a <code>TraceabilityLevelFilter</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TraceabilityLevelFilter} obj Optional instance to populate.
   * @return {module:model/TraceabilityLevelFilter} The populated <code>TraceabilityLevelFilter</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TraceabilityLevelFilter();
      if (data.hasOwnProperty('cbQL'))
        obj.cbQL = ApiClient.convertToType(data['cbQL'], 'String');
      if (data.hasOwnProperty('foldersAndInformation'))
        obj.foldersAndInformation = ApiClient.convertToType(data['foldersAndInformation'], 'Boolean');
      if (data.hasOwnProperty('historyBaselineId'))
        obj.historyBaselineId = ApiClient.convertToType(data['historyBaselineId'], 'Number');
      if (data.hasOwnProperty('historyDate'))
        obj.historyDate = ApiClient.convertToType(data['historyDate'], 'Date');
      if (data.hasOwnProperty('incomingAssociation'))
        obj.incomingAssociation = ApiClient.convertToType(data['incomingAssociation'], 'Boolean');
      if (data.hasOwnProperty('incomingReference'))
        obj.incomingReference = ApiClient.convertToType(data['incomingReference'], 'Boolean');
      if (data.hasOwnProperty('outgoingAssociation'))
        obj.outgoingAssociation = ApiClient.convertToType(data['outgoingAssociation'], 'Boolean');
      if (data.hasOwnProperty('outgoingReference'))
        obj.outgoingReference = ApiClient.convertToType(data['outgoingReference'], 'Boolean');
      if (data.hasOwnProperty('previousLevelItems'))
        obj.previousLevelItems = ApiClient.convertToType(data['previousLevelItems'], [TrackerItemRevision]);
      if (data.hasOwnProperty('showTestStepReferences'))
        obj.showTestStepReferences = ApiClient.convertToType(data['showTestStepReferences'], 'Boolean');
    }
    return obj;
  }
}

/**
 * cbQL
 * @member {String} cbQL
 */
TraceabilityLevelFilter.prototype.cbQL = undefined;

/**
 * Show folders and information
 * @member {Boolean} foldersAndInformation
 * @default false
 */
TraceabilityLevelFilter.prototype.foldersAndInformation = false;

/**
 * History Baseline Id - Snapshot view of the given baseline
 * @member {Number} historyBaselineId
 */
TraceabilityLevelFilter.prototype.historyBaselineId = undefined;

/**
 * History Date - Snapshot view of the given date
 * @member {Date} historyDate
 */
TraceabilityLevelFilter.prototype.historyDate = undefined;

/**
 * Show incoming association
 * @member {Boolean} incomingAssociation
 * @default true
 */
TraceabilityLevelFilter.prototype.incomingAssociation = true;

/**
 * Show incoming references
 * @member {Boolean} incomingReference
 * @default true
 */
TraceabilityLevelFilter.prototype.incomingReference = true;

/**
 * Show outgoing association
 * @member {Boolean} outgoingAssociation
 * @default true
 */
TraceabilityLevelFilter.prototype.outgoingAssociation = true;

/**
 * Show outgoing references
 * @member {Boolean} outgoingReference
 * @default true
 */
TraceabilityLevelFilter.prototype.outgoingReference = true;

/**
 * Previous Level Items
 * @member {Array.<module:model/TrackerItemRevision>} previousLevelItems
 */
TraceabilityLevelFilter.prototype.previousLevelItems = undefined;

/**
 * @member {Boolean} showTestStepReferences
 */
TraceabilityLevelFilter.prototype.showTestStepReferences = undefined;

