/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import ReportCell from './ReportCell';
import ReportItemReference from './ReportItemReference';

/**
 * The ReportRow model module.
 * @module model/ReportRow
 * @version 3.0
 */
export default class ReportRow {
  /**
   * Constructs a new <code>ReportRow</code>.
   * A row of the report containing cell information.
   * @alias module:model/ReportRow
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ReportRow</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ReportRow} obj Optional instance to populate.
   * @return {module:model/ReportRow} The populated <code>ReportRow</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ReportRow();
      if (data.hasOwnProperty('cells'))
        obj.cells = ApiClient.convertToType(data['cells'], [ReportCell]);
      if (data.hasOwnProperty('isRealResult'))
        obj.isRealResult = ApiClient.convertToType(data['isRealResult'], 'Boolean');
      if (data.hasOwnProperty('itemRef'))
        obj.itemRef = ReportItemReference.constructFromObject(data['itemRef']);
      if (data.hasOwnProperty('outlineLevel'))
        obj.outlineLevel = ApiClient.convertToType(data['outlineLevel'], 'Number');
    }
    return obj;
  }
}

/**
 * Cells in a row.
 * @member {Array.<module:model/ReportCell>} cells
 */
ReportRow.prototype.cells = undefined;

/**
 * Indicator if the item is a real query result (e.g. not an ancestor item).
 * @member {Boolean} isRealResult
 */
ReportRow.prototype.isRealResult = undefined;

/**
 * @member {module:model/ReportItemReference} itemRef
 */
ReportRow.prototype.itemRef = undefined;

/**
 * Item's level in the tracker outline.
 * @member {Number} outlineLevel
 */
ReportRow.prototype.outlineLevel = undefined;

