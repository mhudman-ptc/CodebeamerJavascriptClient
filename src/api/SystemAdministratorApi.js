/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from "../ApiClient";
import AuditPermissionsRequest from '../model/AuditPermissionsRequest';
import InternalServerErrorException from '../model/InternalServerErrorException';
import InvalidParametersException from '../model/InvalidParametersException';
import PaginatedAuditPermissionsResponse from '../model/PaginatedAuditPermissionsResponse';
import ResourceForbiddenException from '../model/ResourceForbiddenException';
import ResourceUnauthorizedException from '../model/ResourceUnauthorizedException';
import RestException from '../model/RestException';
import TooManyRequestsException from '../model/TooManyRequestsException';

/**
* SystemAdministrator service.
* @module api/SystemAdministratorApi
* @version 3.0
*/
export default class SystemAdministratorApi {

    /**
    * Constructs a new SystemAdministratorApi. 
    * @alias module:api/SystemAdministratorApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getAuditPermissions operation.
     * @callback moduleapi/SystemAdministratorApi~getAuditPermissionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedAuditPermissionsResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get audit permission entries
     * @param {module:model/AuditPermissionsRequest} body 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Index of page, starting from 1. (default to <.>)
     * @param {Number} opts.pageSize Number of items per page. Max value: 100 (default to <.>)
     * @param {module:api/SystemAdministratorApi~getAuditPermissionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getAuditPermissions(body, opts, callback) {
      opts = opts || {};
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling getAuditPermissions");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'page': opts['page'],'pageSize': opts['pageSize']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['ApiKeyAuth', 'BasicAuth', 'BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json', '*/*'];
      let returnType = PaginatedAuditPermissionsResponse;

      return this.apiClient.callApi(
        '/v3/sysadmin/audit/permissions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}