/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CodebeamerSwaggerApi);
  }
}(this, function(expect, CodebeamerSwaggerApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('BackgroundJob', function() {
      beforeEach(function() {
        instance = new CodebeamerSwaggerApi.BackgroundJob();
      });

      it('should create an instance of BackgroundJob', function() {
        // TODO: update the code to test BackgroundJob
        expect(instance).to.be.a(CodebeamerSwaggerApi.BackgroundJob);
      });

      it('should have the property backgroundJobStatus (base name: "backgroundJobStatus")', function() {
        // TODO: update the code to test the property backgroundJobStatus
        expect(instance).to.have.property('backgroundJobStatus');
        // expect(instance.backgroundJobStatus).to.be(expectedValueLiteral);
      });

      it('should have the property backgroundJobType (base name: "backgroundJobType")', function() {
        // TODO: update the code to test the property backgroundJobType
        expect(instance).to.have.property('backgroundJobType');
        // expect(instance.backgroundJobType).to.be(expectedValueLiteral);
      });

      it('should have the property createdAt (base name: "createdAt")', function() {
        // TODO: update the code to test the property createdAt
        expect(instance).to.have.property('createdAt');
        // expect(instance.createdAt).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property finishedAt (base name: "finishedAt")', function() {
        // TODO: update the code to test the property finishedAt
        expect(instance).to.have.property('finishedAt');
        // expect(instance.finishedAt).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property statusInfo (base name: "statusInfo")', function() {
        // TODO: update the code to test the property statusInfo
        expect(instance).to.have.property('statusInfo');
        // expect(instance.statusInfo).to.be(expectedValueLiteral);
      });

      it('should have the property steps (base name: "steps")', function() {
        // TODO: update the code to test the property steps
        expect(instance).to.have.property('steps');
        // expect(instance.steps).to.be(expectedValueLiteral);
      });

      it('should have the property submittedBy (base name: "submittedBy")', function() {
        // TODO: update the code to test the property submittedBy
        expect(instance).to.have.property('submittedBy');
        // expect(instance.submittedBy).to.be(expectedValueLiteral);
      });

    });
  });

}));
