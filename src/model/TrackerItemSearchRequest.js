/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The TrackerItemSearchRequest model module.
 * @module model/TrackerItemSearchRequest
 * @version 3.0
 */
export default class TrackerItemSearchRequest {
  /**
   * Constructs a new <code>TrackerItemSearchRequest</code>.
   * @alias module:model/TrackerItemSearchRequest
   * @class
   * @param queryString {String} CbQL query for the requested items
   */
  constructor(queryString) {
    this.queryString = queryString;
  }

  /**
   * Constructs a <code>TrackerItemSearchRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TrackerItemSearchRequest} obj Optional instance to populate.
   * @return {module:model/TrackerItemSearchRequest} The populated <code>TrackerItemSearchRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TrackerItemSearchRequest();
      if (data.hasOwnProperty('baselineId'))
        obj.baselineId = ApiClient.convertToType(data['baselineId'], 'Number');
      if (data.hasOwnProperty('page'))
        obj.page = ApiClient.convertToType(data['page'], 'Number');
      if (data.hasOwnProperty('pageSize'))
        obj.pageSize = ApiClient.convertToType(data['pageSize'], 'Number');
      if (data.hasOwnProperty('queryString'))
        obj.queryString = ApiClient.convertToType(data['queryString'], 'String');
    }
    return obj;
  }
}

/**
 * Baseline on which the query is applied.
 * @member {Number} baselineId
 */
TrackerItemSearchRequest.prototype.baselineId = undefined;

/**
 * Index of the page
 * @member {Number} page
 * @default 1
 */
TrackerItemSearchRequest.prototype.page = 1;

/**
 * Size of the found page
 * @member {Number} pageSize
 * @default 25
 */
TrackerItemSearchRequest.prototype.pageSize = 25;

/**
 * CbQL query for the requested items
 * @member {String} queryString
 */
TrackerItemSearchRequest.prototype.queryString = undefined;

