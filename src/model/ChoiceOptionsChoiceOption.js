/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The ChoiceOptionsChoiceOption model module.
 * @module model/ChoiceOptionsChoiceOption
 * @version 3.0
 */
export default class ChoiceOptionsChoiceOption {
  /**
   * Constructs a new <code>ChoiceOptionsChoiceOption</code>.
   * Describes a Choice Option item configuration.
   * @alias module:model/ChoiceOptionsChoiceOption
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ChoiceOptionsChoiceOption</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChoiceOptionsChoiceOption} obj Optional instance to populate.
   * @return {module:model/ChoiceOptionsChoiceOption} The populated <code>ChoiceOptionsChoiceOption</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ChoiceOptionsChoiceOption();
      if (data.hasOwnProperty('color'))
        obj.color = ApiClient.convertToType(data['color'], 'String');
      if (data.hasOwnProperty('defaultInStatuses'))
        obj.defaultInStatuses = ApiClient.convertToType(data['defaultInStatuses'], ['Number']);
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('meanings'))
        obj.meanings = ApiClient.convertToType(data['meanings'], ['String']);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('restrictedToStatuses'))
        obj.restrictedToStatuses = ApiClient.convertToType(data['restrictedToStatuses'], ['Number']);
    }
    return obj;
  }
}

/**
 * @member {String} color
 */
ChoiceOptionsChoiceOption.prototype.color = undefined;

/**
 * @member {Array.<Number>} defaultInStatuses
 */
ChoiceOptionsChoiceOption.prototype.defaultInStatuses = undefined;

/**
 * @member {String} description
 */
ChoiceOptionsChoiceOption.prototype.description = undefined;

/**
 * @member {Number} id
 */
ChoiceOptionsChoiceOption.prototype.id = undefined;

/**
 * Allowed values for the <code>meanings</code> property.
 * @enum {String}
 * @readonly
 */
ChoiceOptionsChoiceOption.MeaningsEnum = {
  /**
   * value: "OBSOLETE"
   * @const
   */
  OBSOLETE: "OBSOLETE",

  /**
   * value: "IN_PROGRESS"
   * @const
   */
  IN_PROGRESS: "IN_PROGRESS",

  /**
   * value: "RESOLVED"
   * @const
   */
  RESOLVED: "RESOLVED",

  /**
   * value: "CLOSED"
   * @const
   */
  CLOSED: "CLOSED",

  /**
   * value: "FOLDER"
   * @const
   */
  FOLDER: "FOLDER",

  /**
   * value: "INFORMATION"
   * @const
   */
  INFORMATION: "INFORMATION",

  /**
   * value: "SUCCESSFUL"
   * @const
   */
  SUCCESSFUL: "SUCCESSFUL"
};
/**
 * @member {Array.<module:model/ChoiceOptionsChoiceOption.MeaningsEnum>} meanings
 */
ChoiceOptionsChoiceOption.prototype.meanings = undefined;

/**
 * @member {String} name
 */
ChoiceOptionsChoiceOption.prototype.name = undefined;

/**
 * @member {Array.<Number>} restrictedToStatuses
 */
ChoiceOptionsChoiceOption.prototype.restrictedToStatuses = undefined;

