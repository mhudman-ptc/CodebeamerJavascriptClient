/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import AbstractBackgroundJobStatusInfo from './AbstractBackgroundJobStatusInfo';
import BackgroundJobStep from './BackgroundJobStep';
import UserReference from './UserReference';

/**
 * The BackgroundJob model module.
 * @module model/BackgroundJob
 * @version 3.0
 */
export default class BackgroundJob {
  /**
   * Constructs a new <code>BackgroundJob</code>.
   * Information about a background job
   * @alias module:model/BackgroundJob
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>BackgroundJob</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BackgroundJob} obj Optional instance to populate.
   * @return {module:model/BackgroundJob} The populated <code>BackgroundJob</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new BackgroundJob();
      if (data.hasOwnProperty('backgroundJobStatus'))
        obj.backgroundJobStatus = ApiClient.convertToType(data['backgroundJobStatus'], 'String');
      if (data.hasOwnProperty('backgroundJobType'))
        obj.backgroundJobType = ApiClient.convertToType(data['backgroundJobType'], 'String');
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'Date');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('finishedAt'))
        obj.finishedAt = ApiClient.convertToType(data['finishedAt'], 'Date');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('statusInfo'))
        obj.statusInfo = AbstractBackgroundJobStatusInfo.constructFromObject(data['statusInfo']);
      if (data.hasOwnProperty('steps'))
        obj.steps = ApiClient.convertToType(data['steps'], [BackgroundJobStep]);
      if (data.hasOwnProperty('submittedBy'))
        obj.submittedBy = UserReference.constructFromObject(data['submittedBy']);
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>backgroundJobStatus</code> property.
 * @enum {String}
 * @readonly
 */
BackgroundJob.BackgroundJobStatusEnum = {
  /**
   * value: "DRAFT"
   * @const
   */
  DRAFT: "DRAFT",

  /**
   * value: "NEW"
   * @const
   */
  NEW: "NEW",

  /**
   * value: "IN_PROGRESS"
   * @const
   */
  IN_PROGRESS: "IN_PROGRESS",

  /**
   * value: "FINISHED"
   * @const
   */
  FINISHED: "FINISHED"
};
/**
 * Status of a background job
 * @member {module:model/BackgroundJob.BackgroundJobStatusEnum} backgroundJobStatus
 */
BackgroundJob.prototype.backgroundJobStatus = undefined;

/**
 * Type of job
 * @member {String} backgroundJobType
 */
BackgroundJob.prototype.backgroundJobType = undefined;

/**
 * Creation time of job
 * @member {Date} createdAt
 */
BackgroundJob.prototype.createdAt = undefined;

/**
 * Description of job
 * @member {String} description
 */
BackgroundJob.prototype.description = undefined;

/**
 * Completion time of job
 * @member {Date} finishedAt
 */
BackgroundJob.prototype.finishedAt = undefined;

/**
 * ID of job
 * @member {Number} id
 */
BackgroundJob.prototype.id = undefined;

/**
 * @member {module:model/AbstractBackgroundJobStatusInfo} statusInfo
 */
BackgroundJob.prototype.statusInfo = undefined;

/**
 * Sub-steps of a job
 * @member {Array.<module:model/BackgroundJobStep>} steps
 */
BackgroundJob.prototype.steps = undefined;

/**
 * @member {module:model/UserReference} submittedBy
 */
BackgroundJob.prototype.submittedBy = undefined;

