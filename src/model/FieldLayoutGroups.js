/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import LayoutField from './LayoutField';

/**
 * The FieldLayoutGroups model module.
 * @module model/FieldLayoutGroups
 * @version 3.0
 */
export default class FieldLayoutGroups {
  /**
   * Constructs a new <code>FieldLayoutGroups</code>.
   * groupsModels of a fieldLayoutSettingsModel
   * @alias module:model/FieldLayoutGroups
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>FieldLayoutGroups</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FieldLayoutGroups} obj Optional instance to populate.
   * @return {module:model/FieldLayoutGroups} The populated <code>FieldLayoutGroups</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new FieldLayoutGroups();
      if (data.hasOwnProperty('collapsed'))
        obj.collapsed = ApiClient.convertToType(data['collapsed'], 'Boolean');
      if (data.hasOwnProperty('color'))
        obj.color = ApiClient.convertToType(data['color'], 'String');
      if (data.hasOwnProperty('default'))
        obj._default = ApiClient.convertToType(data['default'], 'Boolean');
      if (data.hasOwnProperty('fields'))
        obj.fields = ApiClient.convertToType(data['fields'], [LayoutField]);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
    }
    return obj;
  }
}

/**
 * collapsed of a groupsModel
 * @member {Boolean} collapsed
 */
FieldLayoutGroups.prototype.collapsed = undefined;

/**
 * color of a groupsModel
 * @member {String} color
 */
FieldLayoutGroups.prototype.color = undefined;

/**
 * default of a groupsModel
 * @member {Boolean} _default
 */
FieldLayoutGroups.prototype._default = undefined;

/**
 * fieldModel of a groupsModel
 * @member {Array.<module:model/LayoutField>} fields
 */
FieldLayoutGroups.prototype.fields = undefined;

/**
 * name of a groupsModel
 * @member {String} name
 */
FieldLayoutGroups.prototype.name = undefined;

