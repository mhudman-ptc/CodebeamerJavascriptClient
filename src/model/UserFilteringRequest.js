/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The UserFilteringRequest model module.
 * @module model/UserFilteringRequest
 * @version 3.0
 */
export default class UserFilteringRequest {
  /**
   * Constructs a new <code>UserFilteringRequest</code>.
   * @alias module:model/UserFilteringRequest
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>UserFilteringRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserFilteringRequest} obj Optional instance to populate.
   * @return {module:model/UserFilteringRequest} The populated <code>UserFilteringRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new UserFilteringRequest();
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('firstName'))
        obj.firstName = ApiClient.convertToType(data['firstName'], 'String');
      if (data.hasOwnProperty('lastName'))
        obj.lastName = ApiClient.convertToType(data['lastName'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('projectId'))
        obj.projectId = ApiClient.convertToType(data['projectId'], 'Number');
      if (data.hasOwnProperty('userStatus'))
        obj.userStatus = ApiClient.convertToType(data['userStatus'], 'String');
    }
    return obj;
  }
}

/**
 * Email of the user
 * @member {String} email
 */
UserFilteringRequest.prototype.email = undefined;

/**
 * First name of the user
 * @member {String} firstName
 */
UserFilteringRequest.prototype.firstName = undefined;

/**
 * Last name of the user
 * @member {String} lastName
 */
UserFilteringRequest.prototype.lastName = undefined;

/**
 * Name of the user
 * @member {String} name
 */
UserFilteringRequest.prototype.name = undefined;

/**
 * Id of the project where the user is a member
 * @member {Number} projectId
 */
UserFilteringRequest.prototype.projectId = undefined;

/**
 * Allowed values for the <code>userStatus</code> property.
 * @enum {String}
 * @readonly
 */
UserFilteringRequest.UserStatusEnum = {
  /**
   * value: "ACTIVATED"
   * @const
   */
  ACTIVATED: "ACTIVATED",

  /**
   * value: "DISABLED"
   * @const
   */
  DISABLED: "DISABLED",

  /**
   * value: "INACTIVATION"
   * @const
   */
  INACTIVATION: "INACTIVATION"
};
/**
 * Status of the user
 * @member {module:model/UserFilteringRequest.UserStatusEnum} userStatus
 */
UserFilteringRequest.prototype.userStatus = undefined;

