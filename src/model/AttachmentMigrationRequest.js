/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import RemoteMigrationFile from './RemoteMigrationFile';
import TrackerItemReference from './TrackerItemReference';
import UserReference from './UserReference';

/**
 * The AttachmentMigrationRequest model module.
 * @module model/AttachmentMigrationRequest
 * @version 3.0
 */
export default class AttachmentMigrationRequest {
  /**
   * Constructs a new <code>AttachmentMigrationRequest</code>.
   * Request for migrating attachments
   * @alias module:model/AttachmentMigrationRequest
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>AttachmentMigrationRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AttachmentMigrationRequest} obj Optional instance to populate.
   * @return {module:model/AttachmentMigrationRequest} The populated <code>AttachmentMigrationRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AttachmentMigrationRequest();
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'Date');
      if (data.hasOwnProperty('createdBy'))
        obj.createdBy = UserReference.constructFromObject(data['createdBy']);
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('descriptionFormat'))
        obj.descriptionFormat = ApiClient.convertToType(data['descriptionFormat'], 'String');
      if (data.hasOwnProperty('files'))
        obj.files = ApiClient.convertToType(data['files'], [RemoteMigrationFile]);
      if (data.hasOwnProperty('migrationAction'))
        obj.migrationAction = ApiClient.convertToType(data['migrationAction'], 'String');
      if (data.hasOwnProperty('modifiedAt'))
        obj.modifiedAt = ApiClient.convertToType(data['modifiedAt'], 'Date');
      if (data.hasOwnProperty('modifiedBy'))
        obj.modifiedBy = UserReference.constructFromObject(data['modifiedBy']);
      if (data.hasOwnProperty('targetItem'))
        obj.targetItem = TrackerItemReference.constructFromObject(data['targetItem']);
    }
    return obj;
  }
}

/**
 * The date when the entity was created
 * @member {Date} createdAt
 */
AttachmentMigrationRequest.prototype.createdAt = undefined;

/**
 * @member {module:model/UserReference} createdBy
 */
AttachmentMigrationRequest.prototype.createdBy = undefined;

/**
 * Description of the entity
 * @member {String} description
 */
AttachmentMigrationRequest.prototype.description = undefined;

/**
 * Allowed values for the <code>descriptionFormat</code> property.
 * @enum {String}
 * @readonly
 */
AttachmentMigrationRequest.DescriptionFormatEnum = {
  /**
   * value: "PlainText"
   * @const
   */
  plainText: "PlainText",

  /**
   * value: "Html"
   * @const
   */
  html: "Html",

  /**
   * value: "Wiki"
   * @const
   */
  wiki: "Wiki"
};
/**
 * Description format of the entity
 * @member {module:model/AttachmentMigrationRequest.DescriptionFormatEnum} descriptionFormat
 */
AttachmentMigrationRequest.prototype.descriptionFormat = undefined;

/**
 * List of files to migrate
 * @member {Array.<module:model/RemoteMigrationFile>} files
 */
AttachmentMigrationRequest.prototype.files = undefined;

/**
 * Allowed values for the <code>migrationAction</code> property.
 * @enum {String}
 * @readonly
 */
AttachmentMigrationRequest.MigrationActionEnum = {
  /**
   * value: "MOVE"
   * @const
   */
  MOVE: "MOVE",

  /**
   * value: "COPY"
   * @const
   */
  COPY: "COPY"
};
/**
 * Type of action made on the source files.
 * @member {module:model/AttachmentMigrationRequest.MigrationActionEnum} migrationAction
 */
AttachmentMigrationRequest.prototype.migrationAction = undefined;

/**
 * The date when the entity was modified
 * @member {Date} modifiedAt
 */
AttachmentMigrationRequest.prototype.modifiedAt = undefined;

/**
 * @member {module:model/UserReference} modifiedBy
 */
AttachmentMigrationRequest.prototype.modifiedBy = undefined;

/**
 * @member {module:model/TrackerItemReference} targetItem
 */
AttachmentMigrationRequest.prototype.targetItem = undefined;

