/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import TrackerItemRevision from './TrackerItemRevision';

/**
 * The TraceabilityItem model module.
 * @module model/TraceabilityItem
 * @version 3.0
 */
export default class TraceabilityItem {
  /**
   * Constructs a new <code>TraceabilityItem</code>.
   * Traceability Item
   * @alias module:model/TraceabilityItem
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>TraceabilityItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TraceabilityItem} obj Optional instance to populate.
   * @return {module:model/TraceabilityItem} The populated <code>TraceabilityItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TraceabilityItem();
      if (data.hasOwnProperty('children'))
        obj.children = ApiClient.convertToType(data['children'], [TraceabilityItem]);
      if (data.hasOwnProperty('incoming association'))
        obj.incomingAssociation = ApiClient.convertToType(data['incoming association'], [TrackerItemRevision]);
      if (data.hasOwnProperty('incoming reference'))
        obj.incomingReference = ApiClient.convertToType(data['incoming reference'], [TrackerItemRevision]);
      if (data.hasOwnProperty('incomingAssociations'))
        obj.incomingAssociations = ApiClient.convertToType(data['incomingAssociations'], [TrackerItemRevision]);
      if (data.hasOwnProperty('incomingReferences'))
        obj.incomingReferences = ApiClient.convertToType(data['incomingReferences'], [TrackerItemRevision]);
      if (data.hasOwnProperty('itemRevision'))
        obj.itemRevision = TrackerItemRevision.constructFromObject(data['itemRevision']);
      if (data.hasOwnProperty('outgoing association'))
        obj.outgoingAssociation = ApiClient.convertToType(data['outgoing association'], [TrackerItemRevision]);
      if (data.hasOwnProperty('outgoing reference'))
        obj.outgoingReference = ApiClient.convertToType(data['outgoing reference'], [TrackerItemRevision]);
      if (data.hasOwnProperty('outgoingAssociations'))
        obj.outgoingAssociations = ApiClient.convertToType(data['outgoingAssociations'], [TrackerItemRevision]);
      if (data.hasOwnProperty('outgoingReferences'))
        obj.outgoingReferences = ApiClient.convertToType(data['outgoingReferences'], [TrackerItemRevision]);
    }
    return obj;
  }
}

/**
 * children
 * @member {Array.<module:model/TraceabilityItem>} children
 */
TraceabilityItem.prototype.children = undefined;

/**
 * @member {Array.<module:model/TrackerItemRevision>} incomingAssociation
 */
TraceabilityItem.prototype.incomingAssociation = undefined;

/**
 * @member {Array.<module:model/TrackerItemRevision>} incomingReference
 */
TraceabilityItem.prototype.incomingReference = undefined;

/**
 * incoming associations
 * @member {Array.<module:model/TrackerItemRevision>} incomingAssociations
 */
TraceabilityItem.prototype.incomingAssociations = undefined;

/**
 * incoming references
 * @member {Array.<module:model/TrackerItemRevision>} incomingReferences
 */
TraceabilityItem.prototype.incomingReferences = undefined;

/**
 * @member {module:model/TrackerItemRevision} itemRevision
 */
TraceabilityItem.prototype.itemRevision = undefined;

/**
 * @member {Array.<module:model/TrackerItemRevision>} outgoingAssociation
 */
TraceabilityItem.prototype.outgoingAssociation = undefined;

/**
 * @member {Array.<module:model/TrackerItemRevision>} outgoingReference
 */
TraceabilityItem.prototype.outgoingReference = undefined;

/**
 * outgoing association
 * @member {Array.<module:model/TrackerItemRevision>} outgoingAssociations
 */
TraceabilityItem.prototype.outgoingAssociations = undefined;

/**
 * outgoing reference
 * @member {Array.<module:model/TrackerItemRevision>} outgoingReferences
 */
TraceabilityItem.prototype.outgoingReferences = undefined;

