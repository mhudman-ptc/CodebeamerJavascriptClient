/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The TrackerPermission model module.
 * @module model/TrackerPermission
 * @version 3.0
 */
export default class TrackerPermission {
  /**
   * Constructs a new <code>TrackerPermission</code>.
   * @alias module:model/TrackerPermission
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>TrackerPermission</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TrackerPermission} obj Optional instance to populate.
   * @return {module:model/TrackerPermission} The populated <code>TrackerPermission</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TrackerPermission();
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('label'))
        obj.label = ApiClient.convertToType(data['label'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
    }
    return obj;
  }
}

/**
 * Description of the permission
 * @member {String} description
 */
TrackerPermission.prototype.description = undefined;

/**
 * Id of the entity
 * @member {Number} id
 */
TrackerPermission.prototype.id = undefined;

/**
 * Variable name of the permission
 * @member {String} label
 */
TrackerPermission.prototype.label = undefined;

/**
 * Name of the entity
 * @member {String} name
 */
TrackerPermission.prototype.name = undefined;

