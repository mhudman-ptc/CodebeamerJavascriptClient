/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import AbstractFieldValue from './AbstractFieldValue';
import AbstractReference from './AbstractReference';
import CommentReference from './CommentReference';
import Label from './Label';
import TrackerItemReference from './TrackerItemReference';
import TrackerReference from './TrackerReference';
import UserReference from './UserReference';

/**
 * The TrackerItem model module.
 * @module model/TrackerItem
 * @version 3.0
 */
export default class TrackerItem {
  /**
   * Constructs a new <code>TrackerItem</code>.
   * Basic properties of a codebeamer tracker item
   * @alias module:model/TrackerItem
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>TrackerItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TrackerItem} obj Optional instance to populate.
   * @return {module:model/TrackerItem} The populated <code>TrackerItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TrackerItem();
      if (data.hasOwnProperty('accruedMillis'))
        obj.accruedMillis = ApiClient.convertToType(data['accruedMillis'], 'Number');
      if (data.hasOwnProperty('angularIcon'))
        obj.angularIcon = ApiClient.convertToType(data['angularIcon'], 'String');
      if (data.hasOwnProperty('areas'))
        obj.areas = ApiClient.convertToType(data['areas'], [AbstractReference]);
      if (data.hasOwnProperty('assignedAt'))
        obj.assignedAt = ApiClient.convertToType(data['assignedAt'], 'Date');
      if (data.hasOwnProperty('assignedTo'))
        obj.assignedTo = ApiClient.convertToType(data['assignedTo'], [AbstractReference]);
      if (data.hasOwnProperty('categories'))
        obj.categories = ApiClient.convertToType(data['categories'], [AbstractReference]);
      if (data.hasOwnProperty('children'))
        obj.children = ApiClient.convertToType(data['children'], [TrackerItemReference]);
      if (data.hasOwnProperty('closedAt'))
        obj.closedAt = ApiClient.convertToType(data['closedAt'], 'Date');
      if (data.hasOwnProperty('comments'))
        obj.comments = ApiClient.convertToType(data['comments'], [CommentReference]);
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'Date');
      if (data.hasOwnProperty('createdBy'))
        obj.createdBy = UserReference.constructFromObject(data['createdBy']);
      if (data.hasOwnProperty('customFields'))
        obj.customFields = ApiClient.convertToType(data['customFields'], [AbstractFieldValue]);
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('descriptionFormat'))
        obj.descriptionFormat = ApiClient.convertToType(data['descriptionFormat'], 'String');
      if (data.hasOwnProperty('endDate'))
        obj.endDate = ApiClient.convertToType(data['endDate'], 'Date');
      if (data.hasOwnProperty('estimatedMillis'))
        obj.estimatedMillis = ApiClient.convertToType(data['estimatedMillis'], 'Number');
      if (data.hasOwnProperty('formality'))
        obj.formality = AbstractReference.constructFromObject(data['formality']);
      if (data.hasOwnProperty('iconColor'))
        obj.iconColor = ApiClient.convertToType(data['iconColor'], 'String');
      if (data.hasOwnProperty('iconUrl'))
        obj.iconUrl = ApiClient.convertToType(data['iconUrl'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('modifiedAt'))
        obj.modifiedAt = ApiClient.convertToType(data['modifiedAt'], 'Date');
      if (data.hasOwnProperty('modifiedBy'))
        obj.modifiedBy = UserReference.constructFromObject(data['modifiedBy']);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('ordinal'))
        obj.ordinal = ApiClient.convertToType(data['ordinal'], 'Number');
      if (data.hasOwnProperty('owners'))
        obj.owners = ApiClient.convertToType(data['owners'], [AbstractReference]);
      if (data.hasOwnProperty('parent'))
        obj.parent = TrackerItemReference.constructFromObject(data['parent']);
      if (data.hasOwnProperty('platforms'))
        obj.platforms = ApiClient.convertToType(data['platforms'], [AbstractReference]);
      if (data.hasOwnProperty('priority'))
        obj.priority = AbstractReference.constructFromObject(data['priority']);
      if (data.hasOwnProperty('releaseMethod'))
        obj.releaseMethod = AbstractReference.constructFromObject(data['releaseMethod']);
      if (data.hasOwnProperty('resolutions'))
        obj.resolutions = ApiClient.convertToType(data['resolutions'], [AbstractReference]);
      if (data.hasOwnProperty('severities'))
        obj.severities = ApiClient.convertToType(data['severities'], [AbstractReference]);
      if (data.hasOwnProperty('spentMillis'))
        obj.spentMillis = ApiClient.convertToType(data['spentMillis'], 'Number');
      if (data.hasOwnProperty('startDate'))
        obj.startDate = ApiClient.convertToType(data['startDate'], 'Date');
      if (data.hasOwnProperty('status'))
        obj.status = AbstractReference.constructFromObject(data['status']);
      if (data.hasOwnProperty('storyPoints'))
        obj.storyPoints = ApiClient.convertToType(data['storyPoints'], 'Number');
      if (data.hasOwnProperty('subjects'))
        obj.subjects = ApiClient.convertToType(data['subjects'], [AbstractReference]);
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], [Label]);
      if (data.hasOwnProperty('teams'))
        obj.teams = ApiClient.convertToType(data['teams'], [AbstractReference]);
      if (data.hasOwnProperty('tracker'))
        obj.tracker = TrackerReference.constructFromObject(data['tracker']);
      if (data.hasOwnProperty('typeName'))
        obj.typeName = ApiClient.convertToType(data['typeName'], 'String');
      if (data.hasOwnProperty('version'))
        obj.version = ApiClient.convertToType(data['version'], 'Number');
      if (data.hasOwnProperty('versions'))
        obj.versions = ApiClient.convertToType(data['versions'], [AbstractReference]);
    }
    return obj;
  }
}

/**
 * Accrued work time of a tracker item in milliseconds
 * @member {Number} accruedMillis
 */
TrackerItem.prototype.accruedMillis = undefined;

/**
 * Angular icon for the tracker item
 * @member {String} angularIcon
 */
TrackerItem.prototype.angularIcon = undefined;

/**
 * Areas of a tracker item
 * @member {Array.<module:model/AbstractReference>} areas
 */
TrackerItem.prototype.areas = undefined;

/**
 * Assignee date of a tracker item
 * @member {Date} assignedAt
 */
TrackerItem.prototype.assignedAt = undefined;

/**
 * Assignees of a tracker item
 * @member {Array.<module:model/AbstractReference>} assignedTo
 */
TrackerItem.prototype.assignedTo = undefined;

/**
 * Categories of a tracker item
 * @member {Array.<module:model/AbstractReference>} categories
 */
TrackerItem.prototype.categories = undefined;

/**
 * Children of a tracker item
 * @member {Array.<module:model/TrackerItemReference>} children
 */
TrackerItem.prototype.children = undefined;

/**
 * Close date of a tracker item
 * @member {Date} closedAt
 */
TrackerItem.prototype.closedAt = undefined;

/**
 * Comment in the tracker item
 * @member {Array.<module:model/CommentReference>} comments
 */
TrackerItem.prototype.comments = undefined;

/**
 * The date when the entity was created
 * @member {Date} createdAt
 */
TrackerItem.prototype.createdAt = undefined;

/**
 * @member {module:model/UserReference} createdBy
 */
TrackerItem.prototype.createdBy = undefined;

/**
 * Custom field of a tracker item
 * @member {Array.<module:model/AbstractFieldValue>} customFields
 */
TrackerItem.prototype.customFields = undefined;

/**
 * Description of the entity
 * @member {String} description
 */
TrackerItem.prototype.description = undefined;

/**
 * Allowed values for the <code>descriptionFormat</code> property.
 * @enum {String}
 * @readonly
 */
TrackerItem.DescriptionFormatEnum = {
  /**
   * value: "PlainText"
   * @const
   */
  plainText: "PlainText",

  /**
   * value: "Html"
   * @const
   */
  html: "Html",

  /**
   * value: "Wiki"
   * @const
   */
  wiki: "Wiki"
};
/**
 * Description format of the entity
 * @member {module:model/TrackerItem.DescriptionFormatEnum} descriptionFormat
 */
TrackerItem.prototype.descriptionFormat = undefined;

/**
 * End date of a tracker item
 * @member {Date} endDate
 */
TrackerItem.prototype.endDate = undefined;

/**
 * Estimated work time of a tracker item in milliseconds
 * @member {Number} estimatedMillis
 */
TrackerItem.prototype.estimatedMillis = undefined;

/**
 * @member {module:model/AbstractReference} formality
 */
TrackerItem.prototype.formality = undefined;

/**
 * Color of the tracker item icon
 * @member {String} iconColor
 */
TrackerItem.prototype.iconColor = undefined;

/**
 * Url of the tracker item icon
 * @member {String} iconUrl
 */
TrackerItem.prototype.iconUrl = undefined;

/**
 * Id of the entity
 * @member {Number} id
 */
TrackerItem.prototype.id = undefined;

/**
 * The date when the entity was modified
 * @member {Date} modifiedAt
 */
TrackerItem.prototype.modifiedAt = undefined;

/**
 * @member {module:model/UserReference} modifiedBy
 */
TrackerItem.prototype.modifiedBy = undefined;

/**
 * Name of the entity
 * @member {String} name
 */
TrackerItem.prototype.name = undefined;

/**
 * Ordinal of a tracker item
 * @member {Number} ordinal
 */
TrackerItem.prototype.ordinal = undefined;

/**
 * Owners of a tracker item
 * @member {Array.<module:model/AbstractReference>} owners
 */
TrackerItem.prototype.owners = undefined;

/**
 * @member {module:model/TrackerItemReference} parent
 */
TrackerItem.prototype.parent = undefined;

/**
 * Platforms of a tracker item
 * @member {Array.<module:model/AbstractReference>} platforms
 */
TrackerItem.prototype.platforms = undefined;

/**
 * @member {module:model/AbstractReference} priority
 */
TrackerItem.prototype.priority = undefined;

/**
 * @member {module:model/AbstractReference} releaseMethod
 */
TrackerItem.prototype.releaseMethod = undefined;

/**
 * Resolutions of a tracker item
 * @member {Array.<module:model/AbstractReference>} resolutions
 */
TrackerItem.prototype.resolutions = undefined;

/**
 * Severities of a tracker item
 * @member {Array.<module:model/AbstractReference>} severities
 */
TrackerItem.prototype.severities = undefined;

/**
 * Spent work time of a tracker item in milliseconds
 * @member {Number} spentMillis
 */
TrackerItem.prototype.spentMillis = undefined;

/**
 * Start date of a tracker item
 * @member {Date} startDate
 */
TrackerItem.prototype.startDate = undefined;

/**
 * @member {module:model/AbstractReference} status
 */
TrackerItem.prototype.status = undefined;

/**
 * Story points of a tracker item
 * @member {Number} storyPoints
 */
TrackerItem.prototype.storyPoints = undefined;

/**
 * Subjects of a tracker item
 * @member {Array.<module:model/AbstractReference>} subjects
 */
TrackerItem.prototype.subjects = undefined;

/**
 * Tags of the tracker item
 * @member {Array.<module:model/Label>} tags
 */
TrackerItem.prototype.tags = undefined;

/**
 * Teams of a tracker item
 * @member {Array.<module:model/AbstractReference>} teams
 */
TrackerItem.prototype.teams = undefined;

/**
 * @member {module:model/TrackerReference} tracker
 */
TrackerItem.prototype.tracker = undefined;

/**
 * Type name of a tracker item
 * @member {String} typeName
 */
TrackerItem.prototype.typeName = undefined;

/**
 * Version of a tracker item
 * @member {Number} version
 */
TrackerItem.prototype.version = undefined;

/**
 * Versions of a tracker item
 * @member {Array.<module:model/AbstractReference>} versions
 */
TrackerItem.prototype.versions = undefined;

