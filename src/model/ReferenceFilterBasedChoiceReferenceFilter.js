/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The ReferenceFilterBasedChoiceReferenceFilter model module.
 * @module model/ReferenceFilterBasedChoiceReferenceFilter
 * @version 3.0
 */
export default class ReferenceFilterBasedChoiceReferenceFilter {
  /**
   * Constructs a new <code>ReferenceFilterBasedChoiceReferenceFilter</code>.
   * Describes a Choice Option Field&#x27;s Reference Filter.
   * @alias module:model/ReferenceFilterBasedChoiceReferenceFilter
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ReferenceFilterBasedChoiceReferenceFilter</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ReferenceFilterBasedChoiceReferenceFilter} obj Optional instance to populate.
   * @return {module:model/ReferenceFilterBasedChoiceReferenceFilter} The populated <code>ReferenceFilterBasedChoiceReferenceFilter</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ReferenceFilterBasedChoiceReferenceFilter();
      if (data.hasOwnProperty('domainId'))
        obj.domainId = ApiClient.convertToType(data['domainId'], 'Number');
      if (data.hasOwnProperty('domainType'))
        obj.domainType = ApiClient.convertToType(data['domainType'], 'String');
      if (data.hasOwnProperty('filterId'))
        obj.filterId = ApiClient.convertToType(data['filterId'], 'Number');
      if (data.hasOwnProperty('filterStatusId'))
        obj.filterStatusId = ApiClient.convertToType(data['filterStatusId'], 'Number');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('targetIds'))
        obj.targetIds = ApiClient.convertToType(data['targetIds'], ['Number']);
      if (data.hasOwnProperty('targetPermissions'))
        obj.targetPermissions = ApiClient.convertToType(data['targetPermissions'], ['String']);
    }
    return obj;
  }
}

/**
 * @member {Number} domainId
 */
ReferenceFilterBasedChoiceReferenceFilter.prototype.domainId = undefined;

/**
 * Allowed values for the <code>domainType</code> property.
 * @enum {String}
 * @readonly
 */
ReferenceFilterBasedChoiceReferenceFilter.DomainTypeEnum = {
  /**
   * value: "TRACKER"
   * @const
   */
  TRACKER: "TRACKER",

  /**
   * value: "PROJECT"
   * @const
   */
  PROJECT: "PROJECT"
};
/**
 * @member {module:model/ReferenceFilterBasedChoiceReferenceFilter.DomainTypeEnum} domainType
 */
ReferenceFilterBasedChoiceReferenceFilter.prototype.domainType = undefined;

/**
 * @member {Number} filterId
 */
ReferenceFilterBasedChoiceReferenceFilter.prototype.filterId = undefined;

/**
 * @member {Number} filterStatusId
 */
ReferenceFilterBasedChoiceReferenceFilter.prototype.filterStatusId = undefined;

/**
 * @member {Number} id
 */
ReferenceFilterBasedChoiceReferenceFilter.prototype.id = undefined;

/**
 * @member {Array.<Number>} targetIds
 */
ReferenceFilterBasedChoiceReferenceFilter.prototype.targetIds = undefined;

/**
 * @member {Array.<String>} targetPermissions
 */
ReferenceFilterBasedChoiceReferenceFilter.prototype.targetPermissions = undefined;

