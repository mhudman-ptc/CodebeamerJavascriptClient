/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import AbstractFieldValue from './AbstractFieldValue';
import FieldReference from './FieldReference';

/**
 * The AbstractTrackerItemChange model module.
 * @module model/AbstractTrackerItemChange
 * @version 3.0
 */
export default class AbstractTrackerItemChange {
  /**
   * Constructs a new <code>AbstractTrackerItemChange</code>.
   * Update of an item&#x27;s field
   * @alias module:model/AbstractTrackerItemChange
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>AbstractTrackerItemChange</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AbstractTrackerItemChange} obj Optional instance to populate.
   * @return {module:model/AbstractTrackerItemChange} The populated <code>AbstractTrackerItemChange</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AbstractTrackerItemChange();
      if (data.hasOwnProperty('field'))
        obj.field = FieldReference.constructFromObject(data['field']);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('newValue'))
        obj.newValue = AbstractFieldValue.constructFromObject(data['newValue']);
      if (data.hasOwnProperty('oldValue'))
        obj.oldValue = AbstractFieldValue.constructFromObject(data['oldValue']);
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
    }
    return obj;
  }
}

/**
 * @member {module:model/FieldReference} field
 */
AbstractTrackerItemChange.prototype.field = undefined;

/**
 * Name of the field
 * @member {String} name
 */
AbstractTrackerItemChange.prototype.name = undefined;

/**
 * @member {module:model/AbstractFieldValue} newValue
 */
AbstractTrackerItemChange.prototype.newValue = undefined;

/**
 * @member {module:model/AbstractFieldValue} oldValue
 */
AbstractTrackerItemChange.prototype.oldValue = undefined;

/**
 * Change model type
 * @member {String} type
 */
AbstractTrackerItemChange.prototype.type = undefined;

