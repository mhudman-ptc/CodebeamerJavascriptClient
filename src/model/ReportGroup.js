/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import ReportAggregate from './ReportAggregate';

/**
 * The ReportGroup model module.
 * @module model/ReportGroup
 * @version 3.0
 */
export default class ReportGroup {
  /**
   * Constructs a new <code>ReportGroup</code>.
   * A report group which can contain rows or other groups based on the type.
   * @alias module:model/ReportGroup
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ReportGroup</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ReportGroup} obj Optional instance to populate.
   * @return {module:model/ReportGroup} The populated <code>ReportGroup</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ReportGroup();
      if (data.hasOwnProperty('aggregates'))
        obj.aggregates = ApiClient.convertToType(data['aggregates'], [ReportAggregate]);
      if (data.hasOwnProperty('count'))
        obj.count = ApiClient.convertToType(data['count'], 'Number');
      if (data.hasOwnProperty('groupingValue'))
        obj.groupingValue = ApiClient.convertToType(data['groupingValue'], 'String');
      if (data.hasOwnProperty('groupingValueId'))
        obj.groupingValueId = ApiClient.convertToType(data['groupingValueId'], 'Number');
      if (data.hasOwnProperty('header'))
        obj.header = ApiClient.convertToType(data['header'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
    }
    return obj;
  }
}

/**
 * List of the aggregate values with column id.
 * @member {Array.<module:model/ReportAggregate>} aggregates
 */
ReportGroup.prototype.aggregates = undefined;

/**
 * Number of items in the group, if it has subgroups then the aggregated number of items.
 * @member {Number} count
 */
ReportGroup.prototype.count = undefined;

/**
 * The common value in the group, , if it's available
 * @member {String} groupingValue
 */
ReportGroup.prototype.groupingValue = undefined;

/**
 * The id of the common value in the group, if it's available
 * @member {Number} groupingValueId
 */
ReportGroup.prototype.groupingValueId = undefined;

/**
 * Grouping header
 * @member {String} header
 */
ReportGroup.prototype.header = undefined;

/**
 * Type of the group.
 * @member {String} type
 */
ReportGroup.prototype.type = undefined;

