/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CodebeamerSwaggerApi);
  }
}(this, function(expect, CodebeamerSwaggerApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ReportReferencedRow', function() {
      beforeEach(function() {
        instance = new CodebeamerSwaggerApi.ReportReferencedRow();
      });

      it('should create an instance of ReportReferencedRow', function() {
        // TODO: update the code to test ReportReferencedRow
        expect(instance).to.be.a(CodebeamerSwaggerApi.ReportReferencedRow);
      });

      it('should have the property cells (base name: "cells")', function() {
        // TODO: update the code to test the property cells
        expect(instance).to.have.property('cells');
        // expect(instance.cells).to.be(expectedValueLiteral);
      });

      it('should have the property isRealResult (base name: "isRealResult")', function() {
        // TODO: update the code to test the property isRealResult
        expect(instance).to.have.property('isRealResult');
        // expect(instance.isRealResult).to.be(expectedValueLiteral);
      });

      it('should have the property itemRef (base name: "itemRef")', function() {
        // TODO: update the code to test the property itemRef
        expect(instance).to.have.property('itemRef');
        // expect(instance.itemRef).to.be(expectedValueLiteral);
      });

      it('should have the property outlineLevel (base name: "outlineLevel")', function() {
        // TODO: update the code to test the property outlineLevel
        expect(instance).to.have.property('outlineLevel');
        // expect(instance.outlineLevel).to.be(expectedValueLiteral);
      });

      it('should have the property references (base name: "references")', function() {
        // TODO: update the code to test the property references
        expect(instance).to.have.property('references');
        // expect(instance.references).to.be(expectedValueLiteral);
      });

    });
  });

}));
