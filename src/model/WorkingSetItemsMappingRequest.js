/*
 * Codebeamer swagger API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import TrackerItemReference from './TrackerItemReference';
import WorkingSetReference from './WorkingSetReference';

/**
 * The WorkingSetItemsMappingRequest model module.
 * @module model/WorkingSetItemsMappingRequest
 * @version 3.0
 */
export default class WorkingSetItemsMappingRequest {
  /**
   * Constructs a new <code>WorkingSetItemsMappingRequest</code>.
   * Working-Set Tracker Items mapping request object
   * @alias module:model/WorkingSetItemsMappingRequest
   * @class
   * @param items {Array.<module:model/TrackerItemReference>} Tracker Items on Working-Set or on the Default Working-Set
   * @param targetWorkingSet {module:model/WorkingSetReference} 
   */
  constructor(items, targetWorkingSet) {
    this.items = items;
    this.targetWorkingSet = targetWorkingSet;
  }

  /**
   * Constructs a <code>WorkingSetItemsMappingRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/WorkingSetItemsMappingRequest} obj Optional instance to populate.
   * @return {module:model/WorkingSetItemsMappingRequest} The populated <code>WorkingSetItemsMappingRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new WorkingSetItemsMappingRequest();
      if (data.hasOwnProperty('items'))
        obj.items = ApiClient.convertToType(data['items'], [TrackerItemReference]);
      if (data.hasOwnProperty('targetWorkingSet'))
        obj.targetWorkingSet = WorkingSetReference.constructFromObject(data['targetWorkingSet']);
    }
    return obj;
  }
}

/**
 * Tracker Items on Working-Set or on the Default Working-Set
 * @member {Array.<module:model/TrackerItemReference>} items
 */
WorkingSetItemsMappingRequest.prototype.items = undefined;

/**
 * @member {module:model/WorkingSetReference} targetWorkingSet
 */
WorkingSetItemsMappingRequest.prototype.targetWorkingSet = undefined;

